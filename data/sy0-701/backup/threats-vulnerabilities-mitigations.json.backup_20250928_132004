[
  {
    "id": 4,
    "question": "A systems administrator notices that the research and development department is not using the company VPN when accessing various company-related services and systems. Which of the following scenarios describes this activity?",
    "options": [
      "Espionage",
      "Data exfiltration",
      "Nation-state attack",
      "Shadow IT"
    ],
    "correct": [
      3
    ],
    "explanation": "Shadow IT refers to unauthorized IT systems use without explicit approval. See Lesson 2, Topic A: Threat Actors.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 5,
    "question": "Which of the following threat vectors is most commonly utilized by insider threat actors attempting data exfiltration?",
    "options": [
      "Unidentified removable devices",
      "Default network device credentials",
      "Spear phishing emails",
      "Impersonation of business units through typosquatting"
    ],
    "correct": [
      0
    ],
    "explanation": "Insiders use removable devices like USB drives due to physical access. See Lesson 2, Topic A: Threat Actors.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 10,
    "question": "An attacker posing as the Chief Executive Officer calls an employee and instructs the employee to buy gift cards. Which of the following techniques is the attacker using?",
    "options": [
      "Smishing",
      "Disinformation",
      "Impersonating",
      "Whaling"
    ],
    "correct": [
      2
    ],
    "explanation": "Impersonation involves pretending to be someone in authority. See Lesson 2, Topic C: Social Engineering.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 13,
    "question": "A user would like to install software and features that are not available with a smartphone's default software. Which of the following would allow the user to install unauthorized software and enable new features?",
    "options": [
      "SQLi",
      "Cross-site scripting",
      "Jailbreaking",
      "Side loading"
    ],
    "correct": [
      2
    ],
    "explanation": "Jailbreaking removes manufacturer restrictions allowing unauthorized software. See Lesson 10, Topic B: Mobile Device Hardening.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 29,
    "question": "An attacker uses a method that induces a user to inadvertently press a button or click a link that is different from what the user intended. Which of the following describes this type of attack?",
    "options": [
      "Clickjacking",
      "Watering hole",
      "Session replay",
      "Cross-site scripting"
    ],
    "correct": [
      0
    ],
    "explanation": "Clickjacking (also called UI redressing) tricks users into clicking on something different from what they perceive, typically by overlaying invisible or disguised elements over legitimate buttons/links. Users think they're clicking on one thing but actually activate malicious functionality. Watering hole attacks compromise websites frequented by targets, session replay attacks capture and reuse user sessions, and cross-site scripting injects malicious scripts into web pages. Only clickjacking specifically involves tricking users into unintended clicks through UI manipulation. See Lesson 8, Topic B: Application Vulnerabilities.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 31,
    "question": "A penetration tester is performing a password spraying attack. Which of the following tools is the tester most likely using?",
    "options": [
      "Hydra",
      "John the Ripper",
      "Hashcat",
      "Rainbow table"
    ],
    "correct": [
      0
    ],
    "explanation": "Hydra is the most appropriate tool for password spraying attacks. Password spraying involves trying common passwords against many user accounts (opposite of brute force which tries many passwords against one account). Hydra excels at parallelized network authentication attacks across multiple protocols and accounts. John the Ripper and Hashcat are primarily hash cracking tools for offline password recovery, while rainbow tables are precomputed hash lookup tables. Only Hydra is specifically designed for online, multi-target authentication attacks like password spraying. See Lesson 3, Topic A: Social Engineering and Password Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 54,
    "question": "An organization experienced a security breach that allowed an attacker to send fraudulent wire transfers from a hardened PC exclusively to the attacker's bank through remote connections. A security analyst is creating a timeline of events and has found a different PC on the network containing malware. Upon reviewing the command history, the analyst finds the following: PS>.\\mimikatz.exe \"sekurlsa::pth /user:localadmin /domain:corp-domain.com /ntlm:B4B9B02E1F29A3CF193EAB28C8D617D3F327. Which of the following best describes how the attacker gained access to the hardened PC?",
    "options": [
      "The attacker created fileless malware that was hosted by the banking platform",
      "The attacker performed a pass-the-hash attack using a shared support account",
      "The attacker utilized living-off-the-land binaries to evade endpoint detection and response software",
      "The attacker socially engineered the accountant into performing bad transfers"
    ],
    "correct": [
      1
    ],
    "explanation": "Pass-the-hash attack is correct because the command shown uses Mimikatz to perform pass-the-hash (sekurlsa::pth) with the localadmin account and NTLM hash. This technique allows attackers to authenticate using captured password hashes without knowing the actual password, enabling lateral movement from the compromised PC to the hardened PC. The command syntax specifically shows pass-the-hash execution with an administrative account. Fileless malware, living-off-the-land binaries, and social engineering don't match the specific Mimikatz pass-the-hash command evidence. See Lesson 3, Topic B: Credential-Based Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 63,
    "question": "A malicious update was distributed to a common software platform and disabled services at many organizations. Which of the following best describes this type of vulnerability?",
    "options": [
      "DDoS attack",
      "Rogue employee",
      "Insider threat",
      "Supply chain"
    ],
    "correct": [
      3
    ],
    "explanation": "Supply chain vulnerability is correct because the attack compromised a trusted software vendor's update mechanism to distribute malicious code to multiple downstream organizations. This represents a supply chain attack where the vendor's compromise affects all their customers. DDoS attacks target availability through traffic flooding, rogue employees are internal threats, and insider threats involve authorized users acting maliciously. Supply chain attacks specifically target the trust relationship between vendors and customers through compromised products or services. See Lesson 2, Topic B: Supply Chain Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 64,
    "question": "A company web server is initiating outbound traffic to a low-reputation, public IP on non-standard ports. The web server is used to present an unauthenticated page to clients who upload images to the company. An analyst notices a suspicious process running on the server that was not created by the company development team. Which of the following is the most likely explanation for this security incident?",
    "options": [
      "A web shell has been deployed to the server through the page",
      "A vulnerability has been exploited to deploy a worm to the server",
      "Malicious insiders are using the server to mine cryptocurrency",
      "Attackers have deployed a rootkit Trojan to the server over an exposed RDP port"
    ],
    "correct": [
      0
    ],
    "explanation": "Web shell deployment is correct because the server hosts an unauthenticated page with file upload functionality, which is a common attack vector for web shell deployment. The suspicious outbound traffic to low-reputation IPs and unknown processes indicate command and control communication typical of web shells. File upload vulnerabilities allow attackers to upload malicious scripts that provide remote access. While worms, cryptocurrency mining, and rootkits are possible, the combination of file upload functionality and C2 traffic strongly suggests web shell compromise. See Lesson 8, Topic B: Web Application Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 77,
    "question": "A penetration tester enters an office building at the same time as a group of employees despite not having an access badge. Which of the following attack types is the penetration tester performing?",
    "options": [
      "Tailgating",
      "Shoulder surfing",
      "RFID cloning",
      "Forgery"
    ],
    "correct": [
      0
    ],
    "explanation": "Tailgating is correct because it involves following authorized individuals through secured access points without proper credentials. The tester gains physical access by timing their entry with legitimate employees, bypassing access controls through social engineering. Shoulder surfing involves observing sensitive information over someone's shoulder, RFID cloning duplicates access cards, and forgery creates fake documents. Tailgating specifically describes the act of following others through security checkpoints without authorization. See Lesson 2, Topic C: Physical Security Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 81,
    "question": "A customer of a large company receives a phone call from someone claiming to work for the company and asking for the customer's credit card information. The customer sees the caller ID is the same as the company's main phone number. Which of the following attacks is the customer most likely a target of?",
    "options": [
      "Phishing",
      "Whaling",
      "Smishing",
      "Vishing"
    ],
    "correct": [
      3
    ],
    "explanation": "Vishing (voice phishing) is correct because it involves fraudulent phone calls to steal sensitive information, with the attacker using caller ID spoofing to appear legitimate. The voice-based social engineering attack targets the customer through telephone communication. Phishing typically uses email, whaling targets high-value individuals specifically, and smishing uses SMS messages. The phone-based nature with spoofed caller ID specifically characterizes vishing attacks. See Lesson 2, Topic C: Social Engineering Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 87,
    "question": "Which of the following threat vectors is most commonly used in attacks against IoT devices?",
    "options": [
      "Social engineering",
      "Physical access",
      "Default credentials",
      "SQL injection"
    ],
    "correct": [
      2
    ],
    "explanation": "Default credentials are correct because many IoT devices ship with default usernames and passwords that users often don't change, making them easily exploitable. IoT devices frequently have weak security practices and limited user interfaces for configuration changes. Social engineering targets humans not devices, physical access requires proximity and may not be practical for distributed IoT devices, and SQL injection affects databases not typical IoT device interfaces. Default credentials represent the most widespread and easily exploitable vulnerability in IoT devices. See Lesson 10, Topic C: IoT Security.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 92,
    "question": "A government official receives a blank envelope containing photos and a note instructing the official to wire a large sum of money by midnight to prevent the photos from being leaked on the internet. Which of the following best describes the threat actor's intent?",
    "options": [
      "Organized crime",
      "Philosophical beliefs",
      "Espionage",
      "Blackmail"
    ],
    "correct": [
      3
    ],
    "explanation": "Blackmail is correct because the threat actor is demanding payment in exchange for not releasing potentially damaging information (photos). This represents extortion through threats of exposure. Organized crime refers to structured criminal groups, philosophical beliefs drive hacktivists, and espionage involves stealing information for intelligence purposes. The scenario specifically describes coercive demands for money to prevent information disclosure, which is the definition of blackmail. See Lesson 2, Topic A: Threat Actor Motivations.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 97,
    "question": "Which of the following is a possible consequence of a VM escape?",
    "options": [
      "Malicious instructions can be inserted into memory and give the attacker elevated permissions",
      "An attacker can access the hypervisor and compromise other VMs",
      "Unencrypted data can be read by a user who is in a separate environment",
      "Users can install software that is not on the manufacturer's approved list"
    ],
    "correct": [
      1
    ],
    "explanation": "VM escape allows attackers to break out of virtual machine isolation and gain access to the underlying hypervisor, potentially compromising other VMs running on the same host. This represents a critical security breach where the fundamental isolation provided by virtualization is violated. Memory injection attacks occur within VMs, unencrypted data access doesn't require VM escape, and unauthorized software installation is contained within individual VMs. VM escape specifically threatens the hypervisor layer and all hosted VMs. See Lesson 6, Topic A: Virtualization Security.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 99,
    "question": "Which of the following is a type of vulnerability that involves inserting scripts into web-based applications in order to take control of the client's web browser?",
    "options": [
      "SQL injection",
      "Cross-site scripting",
      "Zero-day exploit",
      "On-path attack"
    ],
    "correct": [
      1
    ],
    "explanation": "Cross-site scripting (XSS) involves injecting malicious scripts into web applications that execute in users' browsers, allowing attackers to steal cookies, session tokens, or perform actions on behalf of users. XSS specifically targets client-side execution in browsers. SQL injection targets databases not browsers, zero-day exploits are previously unknown vulnerabilities, and on-path attacks intercept communications. Only XSS involves inserting scripts into web applications to control client browsers. See Lesson 8, Topic B: Web Application Vulnerabilities.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 101,
    "question": "Which of the following actors attacking an organization is the most likely to be motivated by personal beliefs?",
    "options": [
      "Nation-state",
      "Organized crime",
      "Hacktivist",
      "Insider threat"
    ],
    "correct": [
      2
    ],
    "explanation": "Hacktivists are primarily motivated by personal beliefs, ideology, or social/political causes, using cyber attacks to promote their agenda or protest against organizations they oppose. Nation-states are motivated by national interests and intelligence gathering, organized crime seeks financial gain, and insider threats may have various motivations including financial gain or revenge. Only hacktivists consistently operate based on personal convictions and ideological beliefs. See Lesson 2, Topic A: Threat Actor Motivations.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 112,
    "question": "Which of the following threat actors is the most likely to seek financial gain through the use of ransomware attacks?",
    "options": [
      "Organized crime",
      "Insider threat",
      "Nation-state",
      "Hacktivists"
    ],
    "correct": [
      0
    ],
    "explanation": "Organized crime groups are primarily motivated by financial gain and frequently use ransomware as a profitable attack method, demanding payment in cryptocurrency for data decryption. They operate sophisticated ransomware-as-a-service (RaaS) operations. Insider threats may have various motivations, nation-states typically focus on espionage and strategic objectives, and hacktivists are motivated by ideology rather than profit. Organized crime specifically targets financial returns through ransomware operations. See Lesson 2, Topic A: Threat Actor Analysis.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 132,
    "question": "Which of the following attack types is characterized by an attacker sending a large number of connection requests to exhaust server resources?",
    "options": [
      "SQL injection",
      "Cross-site scripting",
      "DDoS",
      "Buffer overflow"
    ],
    "correct": [
      2
    ],
    "explanation": "Distributed Denial of Service (DDoS) attacks send large volumes of connection requests from multiple sources to overwhelm server resources, making services unavailable to legitimate users. DDoS specifically targets availability through resource exhaustion. SQL injection exploits database queries, XSS injects malicious scripts into web pages, and buffer overflow exploits memory management vulnerabilities. Only DDoS focuses on overwhelming servers with connection requests to exhaust computational and network resources. See Lesson 3, Topic B: Network Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 145,
    "question": "An attacker gains access to a system and installs software that allows remote control while remaining hidden from the user. Which of the following best describes this malware?",
    "options": [
      "Virus",
      "Worm",
      "Trojan",
      "Rootkit"
    ],
    "correct": [
      3
    ],
    "explanation": "Rootkit is malware designed to maintain persistent access while hiding its presence from users and security software by modifying system functions and processes. Rootkits operate at low system levels to avoid detection while providing backdoor access. Viruses replicate by attaching to files, worms self-propagate across networks, and Trojans disguise themselves as legitimate software but don't necessarily hide their presence. Rootkits specifically focus on stealth and persistent remote access capabilities. See Lesson 3, Topic A: Malware Types.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 153,
    "question": "Which of the following attack techniques involves manipulating the sequence of instructions that a processor executes?",
    "options": [
      "SQL injection",
      "Buffer overflow",
      "Cross-site scripting",
      "Directory traversal"
    ],
    "correct": [
      1
    ],
    "explanation": "Buffer overflow manipulates processor instruction execution by overwriting memory containing return addresses or function pointers, allowing attackers to redirect program execution to malicious code. Buffer overflows exploit memory management vulnerabilities to control instruction flow. SQL injection targets databases not processor instructions, XSS executes scripts in browsers, and directory traversal accesses unauthorized files. Only buffer overflow directly manipulates the sequence of processor instruction execution through memory corruption. See Lesson 8, Topic B: Memory-Based Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 164,
    "question": "Which of the following vulnerability types is most commonly found in web applications?",
    "options": [
      "Buffer overflow",
      "SQL injection",
      "Privilege escalation",
      "Memory leak"
    ],
    "correct": [
      1
    ],
    "explanation": "SQL injection is consistently among the most common web application vulnerabilities, appearing regularly in the OWASP Top 10. SQL injection exploits inadequate input validation in database queries, allowing attackers to manipulate database operations. Buffer overflows typically affect compiled applications not web applications, privilege escalation can occur in various contexts but isn't web-specific, and memory leaks are performance issues not security vulnerabilities. SQL injection specifically targets web application database interactions. See Lesson 8, Topic B: Web Application Vulnerabilities.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 178,
    "question": "Which of the following allows an exploit to go undetected by the operating system?",
    "options": [
      "Firmware vulnerabilities",
      "Side loading",
      "Memory injection",
      "Encrypted payloads"
    ],
    "correct": [
      2
    ],
    "explanation": "Memory injection techniques load malicious code directly into system memory (RAM) without writing to disk, allowing exploits to avoid detection by traditional file-based security scanners and operating system monitoring. Memory-resident attacks are harder to detect because they don't leave persistent file artifacts. Firmware vulnerabilities affect low-level system code, side loading installs unauthorized applications, and encrypted payloads protect malware during transmission but don't specifically avoid OS detection. Memory injection specifically enables stealthy execution that bypasses many detection mechanisms. See Lesson 3, Topic A: Advanced Attack Techniques.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 185,
    "question": "A penetration tester enters an office building at the same time as a group of employees despite not having an access badge. Which of the following attack types is the penetration tester performing?",
    "options": [
      "Tailgating",
      "Shoulder surfing",
      "RFID cloning",
      "Forgery"
    ],
    "correct": [
      0
    ],
    "explanation": "Tailgating involves following authorized individuals through secured access points without proper credentials or authorization. The penetration tester gains physical access by timing their entry with legitimate employees, exploiting the social tendency to hold doors open for others. Shoulder surfing involves observing sensitive information over someone's shoulder, RFID cloning duplicates access cards, and forgery creates fake documents or credentials. Tailgating specifically describes unauthorized entry by following authorized personnel. See Lesson 2, Topic C: Physical Security Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 189,
    "question": "A customer of a large company receives a phone call from someone claiming to work for the company and asking for the customer's credit card information. The customer sees the caller ID is the same as the company's main phone number. Which of the following attacks is the customer most likely a target of?",
    "options": [
      "Phishing",
      "Whaling",
      "Smishing",
      "Vishing"
    ],
    "correct": [
      3
    ],
    "explanation": "Vishing (voice phishing) involves fraudulent phone calls to obtain sensitive information, often using caller ID spoofing to appear legitimate. The attack uses voice communication to socially engineer victims into revealing confidential information like credit card details. Phishing typically uses email, whaling targets high-value individuals specifically (often via email), and smishing uses SMS text messages. The phone-based nature with spoofed caller ID specifically characterizes vishing attacks against consumers. See Lesson 2, Topic C: Voice-Based Social Engineering.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 195,
    "question": "Which of the following threat vectors is most commonly used in attacks against IoT devices?",
    "options": [
      "Social engineering",
      "Physical access",
      "Default credentials",
      "SQL injection"
    ],
    "correct": [
      2
    ],
    "explanation": "Default credentials represent the most common attack vector against IoT devices because many devices ship with default usernames and passwords that users often fail to change, and manufacturers sometimes use the same credentials across device models. IoT devices frequently have limited user interfaces making credential changes difficult. Social engineering targets humans not devices directly, physical access requires proximity and may not be practical for distributed IoT deployments, and SQL injection affects database-driven applications rather than typical IoT device interfaces. Default credentials are the most widespread and easily exploitable IoT vulnerability. See Lesson 10, Topic C: IoT Security Challenges.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 200,
    "question": "A government official receives a blank envelope containing photos and a note instructing the official to wire a large sum of money by midnight to prevent the photos from being leaked on the internet. Which of the following best describes the threat actor's intent?",
    "options": [
      "Organized crime",
      "Philosophical beliefs",
      "Espionage",
      "Blackmail"
    ],
    "correct": [
      3
    ],
    "explanation": "Blackmail involves threatening to reveal potentially damaging or embarrassing information unless demands are met, typically for financial gain. The scenario describes classic blackmail where the threat actor demands payment to prevent information disclosure. Organized crime refers to structured criminal enterprises, philosophical beliefs drive hacktivists, and espionage involves stealing information for intelligence purposes. The specific demand for money in exchange for not releasing compromising information is the definition of blackmail. See Lesson 2, Topic A: Threat Actor Motivations.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 205,
    "question": "Which of the following is a possible consequence of a VM escape?",
    "options": [
      "Malicious instructions can be inserted into memory and give the attacker elevated permissions",
      "An attacker can access the hypervisor and compromise other VMs",
      "Unencrypted data can be read by a user who is in a separate environment",
      "Users can install software that is not on the manufacturer's approved list"
    ],
    "correct": [
      1
    ],
    "explanation": "VM escape allows attackers to break out of virtual machine isolation and gain access to the underlying hypervisor, potentially compromising other VMs running on the same host system. This represents a critical security breach where virtualization isolation is defeated, enabling lateral movement to other virtual machines. Memory injection attacks occur within VMs, unauthorized data access doesn't require VM escape, and software installation is typically contained within individual VMs. VM escape specifically threatens the hypervisor layer and all hosted virtual machines. See Lesson 6, Topic A: Virtualization Security Risks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 207,
    "question": "Which of the following is a type of vulnerability that involves inserting scripts into web-based applications in order to take control of the client's web browser?",
    "options": [
      "SQL injection",
      "Cross-site scripting",
      "Zero-day exploit",
      "On-path attack"
    ],
    "correct": [
      1
    ],
    "explanation": "Cross-Site Scripting (XSS) involves injecting malicious scripts into web applications that execute in users' browsers, allowing attackers to steal session cookies, perform actions on behalf of users, or redirect users to malicious sites. XSS specifically targets client-side execution within web browsers. SQL injection targets database queries not browsers, zero-day exploits are previously unknown vulnerabilities across various systems, and on-path attacks intercept communications between parties. Only XSS involves inserting scripts into web applications specifically to control client browsers. See Lesson 8, Topic B: Client-Side Attack Vectors.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 209,
    "question": "Which of the following actors attacking an organization is the most likely to be motivated by personal beliefs?",
    "options": [
      "Nation-state",
      "Organized crime",
      "Hacktivist",
      "Insider threat"
    ],
    "correct": [
      2
    ],
    "explanation": "Hacktivists are primarily motivated by personal beliefs, ideology, political causes, or social activism, using cyber attacks to promote their agenda, protest against organizations, or raise awareness for their causes. Their attacks are driven by conviction rather than profit. Nation-states are motivated by national interests and strategic objectives, organized crime seeks financial gain through illegal activities, and insider threats may have various motivations including revenge, financial gain, or coercion. Only hacktivists consistently operate based on personal beliefs and ideological convictions. See Lesson 2, Topic A: Ideologically Motivated Threats.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 214,
    "question": "A malicious actor is trying to access sensitive financial information from a company's database by intercepting and reusing log-in credentials. Which of the following attacks is the malicious actor attempting?",
    "options": [
      "SQL injection",
      "On-path",
      "Brute-force",
      "Password spraying"
    ],
    "correct": [
      1
    ],
    "explanation": "On-path attack (previously known as man-in-the-middle attack) involves intercepting communications between two parties to capture credentials, session tokens, or other sensitive information that can then be reused for unauthorized access. The attacker positions themselves in the communication path to intercept and reuse authentication credentials. SQL injection exploits database input validation, brute-force attempts multiple password combinations, and password spraying tries common passwords against multiple accounts. Only on-path attacks involve intercepting and reusing credentials from network communications. See Lesson 3, Topic B: Interception Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 216,
    "question": "A systems administrator is reviewing the VPN logs and notices that during non-working hours a user is accessing the company file server and information is being transferred to a suspicious IP address. Which of the following threats is most likely occurring?",
    "options": [
      "Typosquatting",
      "Root of trust",
      "Data exfiltration",
      "Blackmail"
    ],
    "correct": [
      2
    ],
    "explanation": "Data exfiltration describes the unauthorized transfer of sensitive data from a company's systems to external locations, often by malicious insiders or compromised accounts. The scenario shows classic indicators: after-hours access, file server access, and data transfer to suspicious external IP addresses. Typosquatting involves registering similar domain names to legitimate sites, root of trust refers to cryptographic trust relationships, and blackmail involves threatening to release information unless demands are met. The pattern of accessing internal files and transferring data externally during non-working hours clearly indicates data exfiltration. See Lesson 2, Topic A: Insider Threat Indicators.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 217,
    "question": "A company discovers that an employee was paid by a competitor to save internal business files to a thumb drive and deliver it to the competitor. Which of the following is most likely the employee's motivation?",
    "options": [
      "Revenge",
      "Financial gain",
      "Blackmail",
      "Data exfiltration"
    ],
    "correct": [
      1
    ],
    "explanation": "Financial gain is the primary motivation because the employee was compensated by a competitor for stealing and delivering confidential business information. The employee's actions were directly motivated by monetary payment from an external party. Revenge involves acting out of anger or resentment without external compensation, blackmail involves threatening to release information unless demands are met, and data exfiltration is the method used rather than the motivation. The compensation from a competitor clearly establishes financial gain as the driving motivation for the insider threat. See Lesson 2, Topic A: Insider Threat Motivations.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 237,
    "question": "An employee receives from a vendor a marketing communication email that includes an attachment. When the employee opens the attachment, the employee's screen displays odd text requesting payment in order to recover data. Within moments, a company-wide email is sent to employees requesting that employees disconnect their computers from the internet and shut them down. Which of the following describes this type of malware?",
    "options": [
      "Trojan",
      "Worm",
      "Ransomware",
      "Virus"
    ],
    "correct": [
      2
    ],
    "explanation": "Ransomware encrypts user files and displays messages demanding payment to restore access to the data, which matches the description of odd text requesting payment to recover data. The rapid company-wide response indicates the malware is spreading quickly and encrypting files across the organization. Trojans disguise themselves as legitimate software, worms self-propagate across networks, and viruses attach to other files to replicate. The specific behavior of encrypting data and demanding payment for recovery uniquely identifies ransomware. See Lesson 3, Topic A: Ransomware Characteristics.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 244,
    "question": "Which of the following is a type of vulnerability that refers to the unauthorized installation of applications on a device through means other than the official application store?",
    "options": [
      "Cross-site scripting",
      "Buffer overflow",
      "Jailbreaking",
      "Side loading"
    ],
    "correct": [
      3
    ],
    "explanation": "Side loading refers to installing applications on devices through alternative methods outside of official application stores, such as downloading APK files directly or using third-party app repositories. This bypasses the security vetting process of official stores and can introduce malicious applications. Cross-site scripting involves injecting scripts into web applications, buffer overflow exploits memory management vulnerabilities, and jailbreaking removes manufacturer restrictions to gain root access. Side loading specifically describes unauthorized application installation from non-official sources. See Lesson 10, Topic B: Mobile Device Security Risks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 253,
    "question": "A company's website is www.company.com. Attackers purchased the domain www.c0mpany.com. Which of the following types of attacks describes this example?",
    "options": [
      "Typosquatting",
      "Brand impersonation",
      "On-path",
      "Watering-hole"
    ],
    "correct": [
      0
    ],
    "explanation": "Typosquatting involves registering domain names that are visually or typographically similar to legitimate domains, exploiting common typing errors or visual similarities to deceive users. In this case, replacing the 'o' with '0' (zero) in 'company' creates a domain that looks nearly identical but leads to an attacker-controlled site. Brand impersonation is broader than just domain registration, on-path attacks intercept communications, and watering-hole attacks compromise legitimate sites frequented by targets. Typosquatting specifically describes the domain registration strategy used to exploit user mistakes. See Lesson 2, Topic C: Domain-Based Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 258,
    "question": "A systems administrator is concerned users are accessing emails through a duplicate site that is not run by the company. Which of the following is used in this scenario?",
    "options": [
      "Impersonation",
      "Replication",
      "Phishing",
      "Smishing"
    ],
    "correct": [
      2
    ],
    "explanation": "Phishing involves creating fraudulent websites or services that appear legitimate to trick users into entering credentials or sensitive information. The duplicate email site represents a classic phishing attack where attackers create fake login pages that mimic the organization's legitimate email portal. Impersonation involves pretending to be someone else, replication is copying data or systems for backup purposes, and smishing uses SMS messages for phishing attacks. The duplicate website specifically represents a phishing attack designed to harvest email credentials. See Lesson 2, Topic C: Web-Based Social Engineering.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 274,
    "question": "A customer changes the underlying file structure of a new mobile phone to install a keylogger with administrator permissions. Which of the following does this best describe?",
    "options": [
      "Resource reuse",
      "Bloatware installation",
      "Side loading",
      "Jailbreaking"
    ],
    "correct": [
      3
    ],
    "explanation": "Jailbreaking involves modifying the device's underlying file structure and operating system to gain root or administrator-level access, allowing installation of unauthorized software like keyloggers that wouldn't normally be permitted. Jailbreaking removes manufacturer-imposed restrictions and security controls. Resource reuse involves repurposing existing assets, bloatware installation adds unwanted software, and side loading installs apps from unofficial sources but doesn't necessarily require system modification. Jailbreaking specifically describes gaining root access through system modification. See Lesson 10, Topic B: Mobile Device Security Risks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 276,
    "question": "While a school district is performing state testing, a security analyst notices all internet services are unavailable. The analyst discovers that ARP poisoning is occurring on the network and then terminates access for the host. Which of the following is most likely responsible for this malicious activity?",
    "options": [
      "Unskilled attacker",
      "Shadow IT",
      "Credential stuffing",
      "DMARC failure"
    ],
    "correct": [
      0
    ],
    "explanation": "ARP poisoning is a relatively basic network attack that doesn't require advanced skills or sophisticated tools, making it commonly used by unskilled attackers (script kiddies) who use readily available tools to disrupt network operations. The timing during state testing suggests opportunistic disruption rather than sophisticated targeting. Shadow IT involves unauthorized technology use, credential stuffing is a password attack method, and DMARC failure relates to email authentication. ARP poisoning specifically represents the type of simple attack favored by unskilled attackers. See Lesson 2, Topic A: Threat Actor Skill Levels.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 282,
    "question": "An analyst discovers a suspicious item in the SQL server logs. Which of the following could be evidence of an attempted SQL injection?",
    "options": [
      "cat /etc/shadow",
      "dig 25.36.99.11",
      "cd ../../../",
      "UserId – 10 OR 1-1"
    ],
    "correct": [
      3
    ],
    "explanation": "The input '10 OR 1=1' represents a classic SQL injection technique designed to manipulate database query logic by adding a condition that always evaluates to true, potentially bypassing authentication or extracting unauthorized data. This pattern attempts to alter SQL query behavior through logical manipulation. 'cat /etc/shadow' is a Linux command for accessing password files, 'dig' is a DNS lookup tool, and 'cd ../../..' represents directory traversal. Only the 'OR 1=1' construct specifically targets SQL query manipulation through injection attacks. See Lesson 8, Topic B: SQL Injection Attack Patterns.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 297,
    "question": "Which of the following attack techniques involves manipulating the sequence of instructions that a processor executes?",
    "options": [
      "SQL injection",
      "Buffer overflow",
      "Cross-site scripting",
      "Directory traversal"
    ],
    "correct": [
      1
    ],
    "explanation": "Buffer overflow attacks manipulate processor instruction execution by overwriting memory locations that contain return addresses, function pointers, or other control data, allowing attackers to redirect program execution flow to malicious code. This technique exploits memory management vulnerabilities to control the sequence of processor instructions. SQL injection targets database queries not processor instructions, XSS executes scripts in browsers not processors, and directory traversal accesses unauthorized files. Only buffer overflow directly manipulates processor instruction sequence through memory corruption. See Lesson 8, Topic B: Memory Exploitation Techniques.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 307,
    "question": "Which of the following vulnerability types is most commonly found in web applications?",
    "options": [
      "Buffer overflow",
      "SQL injection",
      "Privilege escalation",
      "Memory leak"
    ],
    "correct": [
      1
    ],
    "explanation": "SQL injection consistently appears among the most common web application vulnerabilities in the OWASP Top 10 and various security reports. SQL injection exploits inadequate input validation in database queries, allowing attackers to manipulate database operations through web application interfaces. Buffer overflows typically affect compiled applications rather than web applications, privilege escalation can occur in various contexts but isn't web-specific, and memory leaks are performance issues rather than security vulnerabilities. SQL injection specifically targets the common pattern of web applications interacting with backend databases. See Lesson 8, Topic B: Prevalent Web Vulnerabilities.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 321,
    "question": "Which of the following allows an exploit to go undetected by the operating system?",
    "options": [
      "Firmware vulnerabilities",
      "Side loading",
      "Memory injection",
      "Encrypted payloads"
    ],
    "correct": [
      2
    ],
    "explanation": "Memory injection techniques load malicious code directly into system memory (RAM) without writing to disk, allowing exploits to avoid detection by traditional file-based security scanners and operating system monitoring that primarily focus on filesystem activity. Memory-resident attacks are harder to detect because they don't leave persistent file artifacts and operate entirely in volatile memory. Firmware vulnerabilities affect low-level system code, side loading installs unauthorized applications, and encrypted payloads protect malware during transmission but don't specifically avoid OS detection once decrypted. Memory injection specifically enables stealthy execution that bypasses many detection mechanisms. See Lesson 3, Topic A: Fileless Attack Techniques.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 327,
    "question": "A security analyst attempts to start a company's database server. When the server starts, the analyst receives an error message indicating the database server did not pass authentication. After reviewing and testing the system, the analyst receives confirmation that the server has been compromised and that attackers have redirected all outgoing database traffic to a server under their control. Which of the following MITRE ATT&CK techniques did the attacker most likely use to redirect database traffic?",
    "options": [
      "Browser extension",
      "Process injection",
      "Valid accounts",
      "Escape to host"
    ],
    "correct": [
      3
    ],
    "explanation": "Escape to host technique involves breaking out of virtualized or containerized environments to gain access to the underlying host system, which would allow attackers to redirect network traffic at the host level. This technique enables attackers to manipulate network configurations, routing tables, or host-level networking to redirect database traffic to attacker-controlled servers. Browser extensions affect web browsers, process injection involves running code within other processes, and valid accounts involve using legitimate credentials. Escape to host specifically enables the network-level control needed to redirect database traffic. See Lesson 3, Topic A: Container and VM Escape Techniques.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 328,
    "question": "A penetration tester enters an office building at the same time as a group of employees despite not having an access badge. Which of the following attack types is the penetration tester performing?",
    "options": [
      "Tailgating",
      "Shoulder surfing",
      "RFID cloning",
      "Forgery"
    ],
    "correct": [
      0
    ],
    "explanation": "Tailgating involves following authorized individuals through secured access points without proper credentials or authorization, exploiting the social tendency of people to hold doors open for others or allow people to follow them through security checkpoints. The penetration tester gains physical access by timing their entry with legitimate employees. Shoulder surfing involves observing sensitive information over someone's shoulder, RFID cloning duplicates access cards or fobs, and forgery creates fake documents or credentials. Tailgating specifically describes unauthorized entry by following authorized personnel through physical access controls. See Lesson 2, Topic C: Physical Security Bypasses.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 332,
    "question": "A customer of a large company receives a phone call from someone claiming to work for the company and asking for the customer's credit card information. The customer sees the caller ID is the same as the company's main phone number. Which of the following attacks is the customer most likely a target of?",
    "options": [
      "Phishing",
      "Whaling",
      "Smishing",
      "Vishing"
    ],
    "correct": [
      3
    ],
    "explanation": "Vishing (voice phishing) involves fraudulent phone calls to obtain sensitive information, often using caller ID spoofing to appear legitimate and trustworthy. The attack uses voice communication combined with social engineering to manipulate victims into revealing confidential information like credit card details. Phishing typically uses email communications, whaling targets high-value individuals specifically (often via email), and smishing uses SMS text messages. The phone-based nature combined with spoofed caller ID specifically characterizes vishing attacks designed to exploit telephone-based trust relationships. See Lesson 2, Topic C: Voice-Based Social Engineering.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 338,
    "question": "Which of the following threat vectors is most commonly used in attacks against IoT devices?",
    "options": [
      "Social engineering",
      "Physical access",
      "Default credentials",
      "SQL injection"
    ],
    "correct": [
      2
    ],
    "explanation": "Default credentials represent the most common attack vector against IoT devices because many devices ship with default usernames and passwords that users often fail to change, and manufacturers sometimes use the same credentials across entire product lines. IoT devices frequently have limited user interfaces making credential changes difficult, and many users are unaware of the security importance of changing defaults. Social engineering targets humans not devices directly, physical access requires proximity and may not be practical for distributed IoT deployments, and SQL injection affects database-driven applications rather than typical IoT device interfaces. Default credentials are the most widespread and easily exploitable IoT vulnerability. See Lesson 10, Topic C: IoT Security Fundamentals.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 343,
    "question": "A government official receives a blank envelope containing photos and a note instructing the official to wire a large sum of money by midnight to prevent the photos from being leaked on the internet. Which of the following best describes the threat actor's intent?",
    "options": [
      "Organized crime",
      "Philosophical beliefs",
      "Espionage",
      "Blackmail"
    ],
    "correct": [
      3
    ],
    "explanation": "Blackmail involves threatening to reveal potentially damaging, embarrassing, or compromising information unless specific demands are met, typically for financial gain or coercion. The scenario describes classic blackmail tactics where the threat actor demands money in exchange for not releasing potentially damaging photographs. Organized crime refers to structured criminal enterprises but doesn't describe the specific motivation, philosophical beliefs drive hacktivists and ideological actors, and espionage involves stealing information for intelligence purposes. The specific demand for money to prevent information disclosure is the fundamental definition of blackmail or extortion. See Lesson 2, Topic A: Criminal Threat Motivations.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 346,
    "question": "Which of the following would an attacker most likely use to gather network topology information?",
    "options": [
      "Packet capture",
      "Port scanning",
      "Banner grabbing",
      "Traceroute"
    ],
    "correct": [
      3
    ],
    "explanation": "Traceroute provides detailed network topology information by mapping the path packets take through network infrastructure, revealing routers, hops, and network architecture between source and destination. This tool shows the sequence of intermediate devices and can expose internal network structure, routing paths, and potential bottlenecks or security devices. Packet capture monitors traffic content, port scanning identifies open services on specific hosts, and banner grabbing retrieves service version information. Traceroute specifically maps network paths and infrastructure topology that attackers use for reconnaissance and attack planning. See Lesson 8, Topic A: Network Reconnaissance Techniques.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 354,
    "question": "Which of the following describes the main difference between a worm and a virus?",
    "options": [
      "A worm requires user interaction, while a virus does not",
      "A worm spreads through network connections, while a virus requires host files",
      "A worm targets specific operating systems, while a virus is cross-platform",
      "A worm creates backdoors, while a virus steals information"
    ],
    "correct": [
      1
    ],
    "explanation": "A worm spreads independently through network connections and system vulnerabilities without requiring host files or user interaction, while a virus attaches to and infects host files requiring user execution of infected files for propagation. This fundamental difference in propagation mechanism defines the distinction between these malware types. Both worms and viruses can affect multiple operating systems and perform various malicious actions, but the key differentiator is their replication and spreading methodology. Worms are self-propagating network threats, while viruses are file-infecting parasitic programs. See Lesson 3, Topic A: Malware Classification and Behavior.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 355,
    "question": "Which of the following attack types relies on users visiting a website they trust?",
    "options": [
      "SQL injection",
      "Cross-site scripting",
      "Directory traversal",
      "Command injection"
    ],
    "correct": [
      1
    ],
    "explanation": "Cross-site scripting (XSS) relies on users visiting trusted websites that have been compromised with malicious scripts, exploiting the trust relationship between users and legitimate websites to execute malicious code in victims' browsers. XSS attacks inject client-side scripts into trusted web pages viewed by other users. SQL injection targets database queries, directory traversal accesses unauthorized files, and command injection executes system commands, but these don't specifically rely on user trust in websites. XSS uniquely exploits the trust users place in legitimate websites to deliver malicious payloads through compromised web content. See Lesson 6, Topic A: Client-Side Web Application Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 362,
    "question": "A penetration tester gains access to a system and wants to maintain persistence while avoiding detection. Which of the following techniques would be most appropriate?",
    "options": [
      "Installing obvious backdoors",
      "Creating new user accounts",
      "Modifying system logs",
      "Living off the land"
    ],
    "correct": [
      3
    ],
    "explanation": "Living off the land involves using legitimate system tools, processes, and utilities already present on the target system to maintain persistence and conduct malicious activities, making detection more difficult because the activities appear as normal system operations. This technique leverages built-in administrative tools, PowerShell, WMI, or legitimate applications for malicious purposes. Installing obvious backdoors increases detection risk, creating new accounts generates audit logs and alerts, and modifying system logs may trigger integrity monitoring alerts. Living off the land specifically minimizes detection by blending malicious activities with legitimate system operations. See Lesson 3, Topic A: Stealth and Persistence Techniques.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 374,
    "question": "Which of the following attack techniques involves manipulating search engine results to direct users to malicious websites?",
    "options": [
      "Typosquatting",
      "SEO poisoning",
      "Watering hole attack",
      "URL hijacking"
    ],
    "correct": [
      1
    ],
    "explanation": "SEO poisoning (Search Engine Optimization poisoning) manipulates search engine algorithms and results to make malicious websites appear prominently in search results, directing unsuspecting users to compromised or malicious sites when they search for legitimate topics. Attackers use SEO techniques to boost malicious site rankings for popular search terms. Typosquatting uses similar domain names to trick users, watering hole attacks compromise sites users regularly visit, and URL hijacking redirects legitimate URLs. SEO poisoning specifically targets search engine result manipulation to increase malicious site visibility and user traffic. See Lesson 2, Topic C: Search Result Manipulation Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 377,
    "question": "An attacker gains access to a system and immediately attempts to escalate privileges. Which of the following best describes this phase of an attack?",
    "options": [
      "Reconnaissance",
      "Initial access",
      "Privilege escalation",
      "Lateral movement"
    ],
    "correct": [
      2
    ],
    "explanation": "Privilege escalation describes the phase where attackers attempt to gain higher-level permissions or administrative rights after initial system access, moving from limited user accounts to privileged accounts that provide greater system control and access to sensitive resources. This is a critical attack phase that enables more extensive compromise. Reconnaissance involves information gathering, initial access is gaining entry to systems, and lateral movement involves spreading to other systems. Privilege escalation specifically refers to the process of obtaining elevated permissions within compromised systems to expand attack capabilities and access. See Lesson 3, Topic A: Attack Chain Progression.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 382,
    "question": "Which of the following threat actors is most likely motivated by financial gain?",
    "options": [
      "Nation-state",
      "Hacktivist",
      "Organized crime",
      "Script kiddie"
    ],
    "correct": [
      2
    ],
    "explanation": "Organized crime threat actors are most likely motivated by financial gain through various cybercriminal activities including ransomware, banking fraud, credit card theft, cryptocurrency theft, and monetization of stolen data. These groups operate like businesses focused on profit generation through illegal cyber activities. Nation-states typically pursue espionage and strategic objectives, hacktivists are driven by political or social causes, and script kiddies often seek recognition or entertainment rather than financial rewards. Organized crime specifically targets financial profit as their primary motivation for conducting sophisticated cyberattacks and criminal enterprises. See Lesson 2, Topic A: Threat Actor Motivations and Objectives.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 386,
    "question": "Which of the following attack techniques involves compromising a website that is frequently visited by target victims?",
    "options": [
      "Spear phishing",
      "Watering hole attack",
      "Business email compromise",
      "Typosquatting"
    ],
    "correct": [
      1
    ],
    "explanation": "Watering hole attack involves compromising websites that target victims regularly visit, then waiting for victims to visit the compromised site where malicious code exploits their browsers or downloads malware to their systems. This technique leverages user trust and regular browsing habits to deliver attacks. Spear phishing uses targeted emails, business email compromise involves fraudulent email communications, and typosquatting uses similar domain names to trick users. Watering hole attacks specifically target websites within victims' normal browsing patterns to increase infection success rates through trusted site compromise. See Lesson 2, Topic C: Website Compromise Attack Strategies.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 387,
    "question": "A security analyst notices that multiple user accounts are being locked out simultaneously across different systems. Which of the following attacks is most likely occurring?",
    "options": [
      "Password spraying",
      "Brute force attack",
      "Dictionary attack",
      "Credential stuffing"
    ],
    "correct": [
      0
    ],
    "explanation": "Password spraying is most likely occurring because it involves attempting common passwords against multiple user accounts simultaneously, which would cause widespread account lockouts across different systems when lockout policies are triggered. Password spraying tries a few common passwords against many accounts rather than many passwords against one account, often leading to multiple concurrent lockouts. Brute force attacks typically target single accounts intensively, dictionary attacks systematically try password lists, and credential stuffing uses known username/password pairs. Password spraying specifically causes the pattern of simultaneous multi-account lockouts described in the scenario. See Lesson 2, Topic B: Password Attack Pattern Recognition.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 398,
    "question": "Which of the following best describes a supply chain attack?",
    "options": [
      "Attacking an organization's physical supply chain",
      "Compromising third-party vendors to reach target organizations",
      "Intercepting goods during shipping",
      "Attacking supply chain management software"
    ],
    "correct": [
      1
    ],
    "explanation": "Supply chain attacks involve compromising third-party vendors, suppliers, or service providers to gain access to target organizations through trusted relationships and integrated systems. Attackers compromise upstream suppliers to deliver malicious code, gain network access, or steal data from downstream customers who trust the compromised vendor. Physical supply chain attacks, shipping interception, and software-specific attacks are narrower concepts. Supply chain attacks specifically exploit the trust relationships and system integrations between organizations and their suppliers to reach ultimate targets through compromised intermediaries. See Lesson 2, Topic A: Third-Party Attack Vectors.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 401,
    "question": "A security analyst discovers that an attacker has gained access to multiple systems using legitimate user credentials. Which of the following attack techniques is most likely being used?",
    "options": [
      "Privilege escalation",
      "Lateral movement",
      "Initial access",
      "Persistence"
    ],
    "correct": [
      1
    ],
    "explanation": "Lateral movement is most likely being used because it describes the technique where attackers move from one compromised system to other systems within the network using legitimate credentials, often obtained through credential harvesting, pass-the-hash, or other credential theft methods. This allows attackers to expand their access across multiple systems while appearing as legitimate users. Privilege escalation increases permissions on existing systems, initial access is the entry point, and persistence maintains long-term access. Lateral movement specifically describes using legitimate credentials to access multiple systems within an environment. See Lesson 3, Topic A: Network Compromise Progression.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 409,
    "question": "Which of the following attack techniques involves sending specially crafted network packets to consume system resources?",
    "options": [
      "SQL injection",
      "Cross-site scripting",
      "Denial of service",
      "Man-in-the-middle"
    ],
    "correct": [
      2
    ],
    "explanation": "Denial of Service (DoS) attacks involve sending specially crafted network packets or excessive traffic to consume system resources like bandwidth, processing power, memory, or network connections, making targeted systems unavailable to legitimate users. DoS attacks can use various techniques including packet flooding, resource exhaustion, and protocol exploitation. SQL injection targets database queries, cross-site scripting affects web applications, and man-in-the-middle intercepts communications. DoS attacks specifically focus on resource consumption and system availability disruption through network-based attacks designed to overwhelm target systems with malicious or excessive traffic. See Lesson 2, Topic B: Network-Based Availability Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 413,
    "question": "Which of the following social engineering techniques involves creating a fabricated scenario to obtain sensitive information?",
    "options": [
      "Phishing",
      "Pretexting",
      "Baiting",
      "Quid pro quo"
    ],
    "correct": [
      1
    ],
    "explanation": "Pretexting involves creating a fabricated scenario or false narrative to establish trust and manipulate victims into revealing sensitive information, often involving the attacker impersonating authority figures, IT support, or trusted entities to create believable contexts for information requests. Pretexting relies on detailed preparation and convincing storytelling to manipulate victims. Phishing typically uses deceptive communications, baiting offers something enticing to victims, and quid pro quo involves offering services in exchange for information. Pretexting specifically focuses on elaborate fictional scenarios and identity impersonation to create credible contexts for social engineering attacks. See Lesson 2, Topic C: Social Engineering Attack Methodologies.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 415,
    "question": "Which of the following attack techniques involves manipulating the order of database transactions?",
    "options": [
      "SQL injection",
      "Race condition",
      "Buffer overflow",
      "Cross-site request forgery"
    ],
    "correct": [
      1
    ],
    "explanation": "Race condition attacks involve manipulating the timing and order of operations, including database transactions, to exploit windows of opportunity where systems are in inconsistent or vulnerable states during concurrent operations. Race conditions can affect database transactions, file operations, and authentication processes when proper synchronization is lacking. SQL injection targets database queries through malicious input, buffer overflow exploits memory management flaws, and CSRF manipulates user actions through forged requests. Race conditions specifically exploit timing vulnerabilities and transaction ordering to achieve unauthorized outcomes through concurrent operation manipulation. See Lesson 6, Topic A: Concurrency and Timing Attack Vectors.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 425,
    "question": "Which of the following attack techniques involves exploiting vulnerabilities in web application input validation?",
    "options": [
      "Buffer overflow",
      "SQL injection",
      "Denial of service",
      "Man-in-the-middle"
    ],
    "correct": [
      1
    ],
    "explanation": "SQL injection exploits vulnerabilities in web application input validation by inserting malicious SQL code into input fields that is then executed by the database server, allowing attackers to bypass authentication, access unauthorized data, or modify database contents. SQL injection occurs when applications fail to properly validate, sanitize, or parameterize user input before constructing database queries. Buffer overflow exploits memory management flaws, denial of service attacks system availability, and man-in-the-middle intercepts communications. SQL injection specifically targets input validation weaknesses in web applications that interact with databases. See Lesson 6, Topic A: Database Input Validation Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 432,
    "question": "An attacker uses a network of compromised computers to launch attacks against target systems. Which of the following best describes this attack infrastructure?",
    "options": [
      "Botnet",
      "Worm",
      "Trojan horse",
      "Rootkit"
    ],
    "correct": [
      0
    ],
    "explanation": "Botnet describes a network of compromised computers (bots or zombies) controlled by attackers to launch coordinated attacks, distribute malware, send spam, perform denial-of-service attacks, or conduct other malicious activities at scale. Botnets provide attackers with distributed computing resources and can involve thousands or millions of infected devices. Worms self-replicate across networks, Trojan horses masquerade as legitimate software, and rootkits hide malicious activity, but botnets specifically refer to networks of compromised systems used as attack infrastructure. Botnets enable large-scale attacks through coordinated use of multiple compromised systems. See Lesson 3, Topic A: Distributed Attack Infrastructure.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 446,
    "question": "A security analyst is reviewing firewall logs and notices multiple failed connection attempts from various IP addresses to port 22. Which of the following attack types is most likely occurring?",
    "options": [
      "SQL injection",
      "Cross-site scripting",
      "Brute force attack",
      "Man-in-the-middle attack"
    ],
    "correct": [
      2
    ],
    "explanation": "Brute force attack is most likely occurring because multiple failed connection attempts to port 22 (SSH) from various IP addresses indicates automated attempts to guess SSH credentials through systematic password trials. This pattern of numerous failed authentication attempts from distributed sources is characteristic of brute force attacks against SSH services. SQL injection targets database queries, cross-site scripting affects web applications, and man-in-the-middle attacks intercept communications rather than generate multiple failed login attempts. The distributed nature and focus on SSH authentication specifically indicates credential-based brute force attack attempts. See Lesson 2, Topic B: Authentication Attack Patterns.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 449,
    "question": "Which of the following best describes a zero-day vulnerability?",
    "options": [
      "A vulnerability that has been publicly disclosed",
      "A vulnerability that has been patched by the vendor",
      "A vulnerability that is unknown to the vendor and security community",
      "A vulnerability that affects only legacy systems"
    ],
    "correct": [
      2
    ],
    "explanation": "A zero-day vulnerability is unknown to the vendor and security community, meaning no patches or protective measures exist because the vulnerability has not been discovered or disclosed by security researchers or vendors. This creates a window of opportunity for attackers to exploit the vulnerability without defense mechanisms in place. Publicly disclosed vulnerabilities are known issues, patched vulnerabilities have available fixes, and legacy system vulnerabilities are typically known issues in older systems. Zero-day vulnerabilities specifically represent the most dangerous security risks because they can be exploited without available protections or patches. See Lesson 8, Topic A: Vulnerability Classification and Risk.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 451,
    "question": "Which of the following attack techniques involves sending emails that appear to come from trusted sources to steal sensitive information?",
    "options": [
      "Vishing",
      "Smishing",
      "Phishing",
      "Pharming"
    ],
    "correct": [
      2
    ],
    "explanation": "Phishing involves sending fraudulent emails that appear to come from trusted sources (banks, companies, government agencies) to deceive recipients into revealing sensitive information like credentials, financial data, or personal information. Phishing emails often mimic legitimate communications and direct users to malicious websites or request direct information disclosure. Vishing uses voice communications (phone calls), smishing uses SMS text messages, and pharming redirects users to malicious websites through DNS manipulation. Phishing specifically uses email as the attack vector with social engineering to impersonate trusted entities and steal sensitive information. See Lesson 2, Topic C: Email-Based Social Engineering Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 456,
    "question": "A penetration tester gains initial access to a system and then attempts to move laterally to other systems on the network. Which of the following best describes this phase of the attack?",
    "options": [
      "Reconnaissance",
      "Weaponization",
      "Lateral movement",
      "Actions on objectives"
    ],
    "correct": [
      2
    ],
    "explanation": "Lateral movement describes the phase where attackers expand their access from initially compromised systems to other systems within the target network, using various techniques like credential harvesting, pass-the-hash attacks, or exploiting trust relationships to gain access to additional resources. Lateral movement enables attackers to explore the network and access high-value targets. Reconnaissance involves information gathering before attacks, weaponization creates attack tools, and actions on objectives involve achieving attack goals. Lateral movement specifically refers to the network expansion phase where attackers spread from initial footholds to additional systems within compromised environments. See Lesson 3, Topic A: Attack Chain Lateral Movement.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 460,
    "question": "A security analyst discovers that an attacker has been using legitimate system tools to perform malicious activities. Which of the following attack techniques best describes this behavior?",
    "options": [
      "Zero-day exploit",
      "Living off the land",
      "Supply chain attack",
      "Watering hole attack"
    ],
    "correct": [
      1
    ],
    "explanation": "Living off the land describes attackers using legitimate system tools, utilities, and processes already present on target systems to perform malicious activities, making detection more difficult because the tools appear as normal administrative or system operations. This technique leverages built-in capabilities like PowerShell, WMI, or administrative tools for malicious purposes. Zero-day exploits use unknown vulnerabilities, supply chain attacks compromise trusted vendors, and watering hole attacks compromise frequently visited websites. Living off the land specifically refers to using legitimate system resources and tools for malicious purposes while blending in with normal system activities. See Lesson 3, Topic A: Stealth Attack Techniques Using System Tools.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 463,
    "question": "Which of the following attack vectors is most commonly associated with IoT devices?",
    "options": [
      "SQL injection",
      "Default credentials",
      "Buffer overflow",
      "Cross-site scripting"
    ],
    "correct": [
      1
    ],
    "explanation": "Default credentials are most commonly associated with IoT device attack vectors because many IoT devices ship with default usernames and passwords that users often fail to change, and manufacturers sometimes use identical credentials across product lines, creating widespread vulnerabilities. IoT devices frequently have limited user interfaces making credential changes difficult. SQL injection affects database applications, buffer overflow exploits memory management in software, and cross-site scripting targets web applications, but default credentials specifically represent the most prevalent and easily exploitable vulnerability in IoT device deployments. See Lesson 10, Topic C: IoT Security Vulnerability Patterns.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 476,
    "question": "A security analyst discovers that attackers have been using stolen credentials to access multiple systems within the organization. Which of the following attack techniques best describes this scenario?",
    "options": [
      "Privilege escalation",
      "Lateral movement",
      "Initial access",
      "Credential stuffing"
    ],
    "correct": [
      3
    ],
    "explanation": "Credential stuffing best describes using stolen credentials to access multiple systems because this attack technique involves using lists of compromised username/password pairs (often from previous data breaches) to gain unauthorized access to user accounts across multiple systems and services. Credential stuffing exploits password reuse across different platforms. Privilege escalation increases permissions on existing systems, lateral movement spreads within networks using various techniques, and initial access refers to gaining entry into systems. Credential stuffing specifically involves systematic use of stolen credential databases to compromise accounts across multiple services. See Lesson 2, Topic B: Credential-Based Attack Techniques.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 482,
    "question": "An attacker sends a specially crafted email designed to appear as if it came from the CEO to the finance team requesting an urgent wire transfer. Which of the following attack types best describes this scenario?",
    "options": [
      "Spear phishing",
      "Business email compromise",
      "Whaling",
      "Pretexting"
    ],
    "correct": [
      1
    ],
    "explanation": "Business Email Compromise (BEC) best describes this scenario because it involves fraudulent emails that impersonate executives or trusted business partners to trick employees into performing unauthorized financial transactions, data transfers, or other business actions. BEC attacks specifically target business processes and financial operations through executive impersonation. Spear phishing targets specific individuals with personalized attacks, whaling targets high-level executives as victims, and pretexting uses fabricated scenarios, but BEC specifically involves impersonating business leaders to compromise business processes and financial operations through fraudulent requests. See Lesson 2, Topic C: Executive Impersonation Attack Types.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 493,
    "question": "Which of the following attack techniques involves exploiting the time gap between a security check and the use of a resource?",
    "options": [
      "Buffer overflow",
      "Race condition",
      "SQL injection",
      "Cross-site scripting"
    ],
    "correct": [
      1
    ],
    "explanation": "Race condition attacks exploit the time gap between a security check and the use of a resource by manipulating the timing of operations to create windows where systems are in inconsistent or vulnerable states, allowing attackers to bypass security controls through timing manipulation. Race conditions affect concurrent operations and synchronization. Buffer overflow exploits memory management, SQL injection targets database queries, and cross-site scripting affects web applications, but race conditions specifically exploit timing vulnerabilities and synchronization gaps where security checks and resource usage occur at different times, creating opportunities for unauthorized access or privilege escalation. See Lesson 6, Topic A: Timing and Synchronization Attack Vectors.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 496,
    "question": "A security administrator is implementing a solution to prevent attackers from gaining persistent access to systems after initial compromise. Which of the following strategies would be most effective?",
    "options": [
      "Regular password changes",
      "System hardening",
      "Privilege escalation prevention",
      "Persistence mechanism detection"
    ],
    "correct": [
      3
    ],
    "explanation": "Persistence mechanism detection is most effective for preventing attackers from gaining persistent access after initial compromise because it identifies and removes the various techniques attackers use to maintain long-term access, such as backdoors, scheduled tasks, registry modifications, service installations, and startup program modifications. Detection focuses on identifying persistence attempts. Regular password changes help but don't address technical persistence mechanisms, system hardening prevents initial compromise but may not detect post-compromise persistence, and privilege escalation prevention limits access elevation but doesn't address persistence mechanisms. Persistence detection specifically identifies and removes the technical means attackers use to maintain ongoing access. See Lesson 3, Topic A: Persistence Detection and Prevention.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 501,
    "question": "Which of the following attack techniques involves redirecting users to malicious websites by corrupting DNS responses?",
    "options": [
      "DNS poisoning",
      "ARP spoofing",
      "IP spoofing",
      "MAC flooding"
    ],
    "correct": [
      0
    ],
    "explanation": "DNS poisoning involves redirecting users to malicious websites by corrupting DNS responses with false information that associates legitimate domain names with attacker-controlled IP addresses, causing users who request legitimate sites to be directed to malicious servers instead. DNS poisoning targets the domain name resolution process. ARP spoofing affects local network address resolution, IP spoofing forges source addresses, and MAC flooding overwhelms switch tables, but DNS poisoning specifically manipulates domain name resolution to redirect users to malicious websites through corrupted DNS information and cache poisoning attacks. See Lesson 2, Topic B: Network Protocol Manipulation Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 514,
    "question": "An attacker compromises a web application and uses it to attack internal systems that are not directly accessible from the internet. Which of the following attack types best describes this scenario?",
    "options": [
      "Cross-site scripting",
      "SQL injection",
      "Server-side request forgery",
      "Cross-site request forgery"
    ],
    "correct": [
      2
    ],
    "explanation": "Server-Side Request Forgery (SSRF) best describes using a compromised web application to attack internal systems not directly accessible from the internet because SSRF vulnerabilities allow attackers to make the web server send requests to internal resources, effectively using the compromised server as a proxy to access internal networks, databases, or services that would otherwise be protected from external access. SSRF enables internal network attacks through external web applications. Cross-site scripting affects client browsers, SQL injection targets databases, and cross-site request forgery tricks users into performing actions, but SSRF specifically enables attacks against internal systems through compromised web applications acting as intermediaries. See Lesson 6, Topic A: Web Application Internal Network Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 530,
    "question": "Which of the following attack techniques involves overwhelming a target system with traffic from multiple sources?",
    "options": [
      "Distributed denial of service",
      "Man-in-the-middle",
      "SQL injection",
      "Cross-site scripting"
    ],
    "correct": [
      0
    ],
    "explanation": "Distributed Denial of Service (DDoS) involves overwhelming target systems with traffic from multiple sources simultaneously, making services unavailable to legitimate users by consuming bandwidth, server resources, or network infrastructure capacity through coordinated attacks from many different systems. DDoS amplifies attack impact through distributed sources. Man-in-the-middle attacks intercept communications, SQL injection targets database queries, and cross-site scripting affects web applications, but DDoS specifically uses multiple attack sources to generate overwhelming traffic volumes that exceed target system capacity and cause service disruption through resource exhaustion. See Lesson 2, Topic B: Distributed Network Attack Methods.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 542,
    "question": "Which of the following attack techniques involves manipulating users into performing actions they did not intend to perform?",
    "options": [
      "SQL injection",
      "Cross-site request forgery",
      "Buffer overflow",
      "Directory traversal"
    ],
    "correct": [
      1
    ],
    "explanation": "Cross-Site Request Forgery (CSRF) involves manipulating users into performing actions they did not intend to perform by tricking authenticated users into executing unwanted actions on web applications where they are authenticated, often through malicious links or forms that exploit the user's existing authentication session. CSRF manipulates user actions without their knowledge or consent. SQL injection targets database queries, buffer overflow exploits memory management, and directory traversal accesses unauthorized files, but CSRF specifically tricks authenticated users into performing unintended actions on web applications by exploiting trust relationships and existing authentication sessions. See Lesson 6, Topic A: User Action Manipulation Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 551,
    "question": "Which of the following attack techniques involves exploiting trust relationships between systems to gain unauthorized access?",
    "options": [
      "Privilege escalation",
      "Lateral movement",
      "Initial access",
      "Persistence"
    ],
    "correct": [
      1
    ],
    "explanation": "Lateral movement involves exploiting trust relationships between systems to gain unauthorized access by moving from initially compromised systems to other systems within the network using established trust relationships, shared credentials, or authentication mechanisms that allow access across system boundaries. Lateral movement leverages existing trust to expand access. Privilege escalation increases permissions on existing systems, initial access is the entry point into systems, and persistence maintains long-term access, but lateral movement specifically uses trust relationships and authentication mechanisms to spread access across multiple systems within compromised environments. See Lesson 3, Topic A: Trust Relationship Exploitation Techniques.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 559,
    "question": "Which of the following attack techniques involves sending malicious code that is executed by a web browser?",
    "options": [
      "SQL injection",
      "Cross-site scripting",
      "Command injection",
      "LDAP injection"
    ],
    "correct": [
      1
    ],
    "explanation": "Cross-Site Scripting (XSS) involves sending malicious code that is executed by web browsers when users visit compromised websites or view malicious content, allowing attackers to execute scripts in victims' browsers to steal cookies, session tokens, or other sensitive information, or perform actions on behalf of users. XSS specifically targets client-side browser execution. SQL injection targets database queries, command injection executes system commands, and LDAP injection targets directory services, but XSS specifically involves malicious script execution within web browsers that can access and manipulate web application data and user sessions. See Lesson 6, Topic A: Client-Side Code Execution Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 567,
    "question": "Which of the following attack techniques involves exploiting weaknesses in the implementation of cryptographic algorithms?",
    "options": [
      "Brute force attack",
      "Side-channel attack",
      "Dictionary attack",
      "Rainbow table attack"
    ],
    "correct": [
      1
    ],
    "explanation": "Side-channel attack involves exploiting weaknesses in the implementation of cryptographic algorithms by analyzing physical characteristics like power consumption, electromagnetic emissions, timing variations, or acoustic signatures to extract cryptographic keys or sensitive information without directly attacking the mathematical algorithm itself. Side-channel attacks target implementation vulnerabilities rather than algorithmic weaknesses. Brute force attacks try all possible keys, dictionary attacks use common passwords, and rainbow table attacks use precomputed hashes, but side-channel attacks specifically exploit physical implementation characteristics to bypass cryptographic protections through analysis of system behavior during cryptographic operations. See Lesson 11, Topic A: Cryptographic Implementation Attack Vectors.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 578,
    "question": "Which of the following attack techniques involves manipulating Domain Name System responses to redirect users to malicious websites?",
    "options": [
      "DNS cache poisoning",
      "ARP spoofing",
      "IP spoofing",
      "DHCP spoofing"
    ],
    "correct": [
      0
    ],
    "explanation": "DNS cache poisoning involves manipulating Domain Name System responses to redirect users to malicious websites by corrupting DNS cache entries with false information that associates legitimate domain names with attacker-controlled IP addresses, causing users who request legitimate sites to be directed to malicious servers. DNS poisoning targets domain name resolution infrastructure. ARP spoofing affects local network address resolution, IP spoofing forges packet source addresses, and DHCP spoofing provides false network configuration, but DNS cache poisoning specifically manipulates domain name resolution to redirect users to malicious websites through corrupted DNS information and cache manipulation. See Lesson 2, Topic B: DNS Resolution Manipulation Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 583,
    "question": "A security analyst discovers that attackers have been using social media to gather information about employees for targeted attacks. Which of the following attack techniques does this represent?",
    "options": [
      "Social engineering",
      "Open source intelligence",
      "Spear phishing",
      "Reconnaissance"
    ],
    "correct": [
      3
    ],
    "explanation": "Reconnaissance represents attackers using social media to gather information about employees for targeted attacks because reconnaissance involves the systematic collection of information about targets, organizations, and individuals to plan and execute more effective attacks. Social media provides valuable intelligence for attack planning. Social engineering uses psychological manipulation, open source intelligence is a broader category of information gathering, and spear phishing is a targeted attack method that may use reconnaissance information, but reconnaissance specifically describes the information gathering phase where attackers collect intelligence from various sources including social media to support attack planning and targeting. See Lesson 2, Topic A: Target Information Gathering Techniques.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 600,
    "question": "Which of the following attack techniques involves exploiting trust relationships between domains or systems?",
    "options": [
      "Privilege escalation",
      "Lateral movement",
      "Domain hijacking",
      "Trust exploitation"
    ],
    "correct": [
      3
    ],
    "explanation": "Trust exploitation involves exploiting trust relationships between domains or systems by leveraging established authentication mechanisms, shared credentials, or trust configurations to gain unauthorized access across security boundaries. Trust exploitation specifically targets inter-domain or inter-system trust relationships. Privilege escalation increases permissions within systems, lateral movement spreads access within networks, and domain hijacking takes control of domain names, but trust exploitation specifically refers to attacking trust relationships and authentication mechanisms that exist between separate domains, systems, or security boundaries to bypass security controls through legitimate trust channels. See Lesson 3, Topic A: Inter-Domain Trust Attack Vectors.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 607,
    "question": "A security administrator discovers that attackers are using legitimate system utilities to perform malicious activities. Which of the following terms best describes this technique?",
    "options": [
      "Zero-day exploit",
      "Living off the land",
      "Fileless malware",
      "Advanced persistent threat"
    ],
    "correct": [
      1
    ],
    "explanation": "Living off the land best describes attackers using legitimate system utilities to perform malicious activities because this technique involves leveraging built-in operating system tools, administrative utilities, and legitimate software already present on target systems to conduct attacks while avoiding detection by appearing as normal system operations. Living off the land minimizes the attacker's footprint and detection risk. Zero-day exploits use unknown vulnerabilities, fileless malware operates in memory without disk artifacts, and APT describes long-term attack campaigns, but living off the land specifically refers to using legitimate tools and utilities for malicious purposes to blend in with normal system activities. See Lesson 3, Topic A: Legitimate Tool Misuse Techniques.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 610,
    "question": "Which of the following attack techniques involves overwhelming a single target with traffic from multiple distributed sources?",
    "options": [
      "Denial of service",
      "Distributed denial of service",
      "Man-in-the-middle",
      "Session hijacking"
    ],
    "correct": [
      1
    ],
    "explanation": "Distributed Denial of Service (DDoS) involves overwhelming a single target with traffic from multiple distributed sources simultaneously, making services unavailable to legitimate users by consuming bandwidth, server resources, or network infrastructure capacity through coordinated attacks from many different systems across multiple networks. DDoS amplifies attack impact through distributed coordination. Basic denial of service uses single attack sources, man-in-the-middle attacks intercept communications, and session hijacking steals user sessions, but DDoS specifically uses multiple distributed attack sources to generate overwhelming traffic volumes that exceed target system capacity and cause service disruption through coordinated resource exhaustion. See Lesson 2, Topic B: Coordinated Distributed Attack Methods.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 616,
    "question": "Which of the following attack techniques involves tricking users into performing actions they did not intend to perform on a web application?",
    "options": [
      "Cross-site scripting",
      "SQL injection",
      "Cross-site request forgery",
      "Command injection"
    ],
    "correct": [
      2
    ],
    "explanation": "Cross-Site Request Forgery (CSRF) involves tricking users into performing actions they did not intend to perform on web applications by exploiting the user's existing authentication session to execute unauthorized commands or transactions through malicious requests that appear to come from legitimate users. CSRF exploits trust relationships between users and web applications. Cross-site scripting executes malicious scripts in browsers, SQL injection targets database queries, and command injection executes system commands, but CSRF specifically tricks authenticated users into performing unintended actions on web applications by forging requests that exploit existing user sessions and authentication tokens. See Lesson 6, Topic A: User Action Manipulation Through Request Forgery.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 626,
    "question": "Which of the following attack techniques involves exploiting vulnerabilities in web application session management?",
    "options": [
      "SQL injection",
      "Cross-site scripting",
      "Session hijacking",
      "Command injection"
    ],
    "correct": [
      2
    ],
    "explanation": "Session hijacking involves exploiting vulnerabilities in web application session management by stealing, intercepting, or predicting session tokens to impersonate legitimate users and gain unauthorized access to their accounts and data. Session hijacking specifically targets session management weaknesses including predictable session IDs, session fixation, and insecure session handling. SQL injection targets database queries, cross-site scripting executes malicious scripts in browsers, and command injection executes system commands, but session hijacking specifically exploits session management vulnerabilities to compromise user sessions and authentication states in web applications. See Lesson 6, Topic A: Web Session Security Attack Vectors.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 634,
    "question": "Which of the following attack techniques involves manipulating search results to direct users to malicious websites?",
    "options": [
      "SEO poisoning",
      "DNS poisoning",
      "Typosquatting",
      "Watering hole attack"
    ],
    "correct": [
      0
    ],
    "explanation": "SEO poisoning involves manipulating search results to direct users to malicious websites by exploiting search engine optimization techniques to make malicious sites appear prominently in search results for popular or trending topics, causing users to visit compromised sites when searching for legitimate information. SEO poisoning specifically targets search engine results manipulation. DNS poisoning corrupts domain name resolution, typosquatting uses similar domain names to deceive users, and watering hole attacks compromise sites users regularly visit. SEO poisoning specifically manipulates search engine algorithms and rankings to increase malicious site visibility and user traffic through search result manipulation and content optimization techniques. See Lesson 2, Topic C: Search Engine Result Manipulation.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 644,
    "question": "Which of the following attack techniques involves exploiting weaknesses in the physical implementation of cryptographic systems?",
    "options": [
      "Brute force attack",
      "Side-channel attack",
      "Man-in-the-middle attack",
      "Dictionary attack"
    ],
    "correct": [
      1
    ],
    "explanation": "Side-channel attack involves exploiting weaknesses in the physical implementation of cryptographic systems by analyzing physical characteristics like power consumption, electromagnetic emissions, timing variations, acoustic signatures, or fault injection to extract cryptographic keys or sensitive information without directly attacking the mathematical algorithms. Side-channel attacks target implementation vulnerabilities rather than algorithmic weaknesses. Brute force attacks try all possible keys through computational methods, man-in-the-middle attacks intercept communications, and dictionary attacks use common password lists, but side-channel attacks specifically exploit physical implementation characteristics to bypass cryptographic protections through analysis of system behavior during cryptographic operations. See Lesson 11, Topic A: Physical Cryptographic Attack Vectors.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 652,
    "question": "Which of the following attack techniques involves compromising a website that target victims regularly visit?",
    "options": [
      "Spear phishing",
      "Watering hole attack",
      "Business email compromise",
      "Social engineering"
    ],
    "correct": [
      1
    ],
    "explanation": "Watering hole attack involves compromising websites that target victims regularly visit, then waiting for victims to visit the compromised site where malicious code exploits their browsers or downloads malware to their systems. This technique leverages user trust and regular browsing habits to deliver attacks through legitimate websites that users frequent. Spear phishing uses targeted emails, business email compromise involves fraudulent communications, and social engineering uses psychological manipulation, but watering hole attacks specifically target websites within victims' normal browsing patterns to increase infection success rates through trusted site compromise. See Lesson 2, Topic C: Trusted Website Compromise Strategies.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 660,
    "question": "Which of the following attack techniques involves exploiting trust relationships between federated identity systems?",
    "options": [
      "Identity spoofing",
      "Federation attack",
      "Token manipulation",
      "Authentication bypass"
    ],
    "correct": [
      1
    ],
    "explanation": "Federation attack involves exploiting trust relationships between federated identity systems by manipulating authentication tokens, SAML assertions, or trust configurations to gain unauthorized access across federated domains or impersonate users in partner organizations. Federation attacks specifically target inter-domain trust mechanisms. Identity spoofing impersonates users, token manipulation modifies authentication tokens, and authentication bypass circumvents authentication mechanisms, but federation attacks specifically exploit the trust relationships and authentication mechanisms that exist between federated identity providers and service providers to gain cross-domain access or escalate privileges across organizational boundaries. See Lesson 4, Topic C: Federated Identity Trust Exploitation.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 668,
    "question": "Which of the following attack techniques involves manipulating application logic to bypass security controls?",
    "options": [
      "Logic bomb",
      "Business logic attack",
      "Race condition",
      "Time-of-check time-of-use"
    ],
    "correct": [
      1
    ],
    "explanation": "Business logic attack involves manipulating application logic to bypass security controls by exploiting flaws in application design, workflow, or business rule implementation that allow attackers to perform unauthorized actions or access restricted functionality through legitimate application features used in unintended ways. Business logic attacks target application-specific vulnerabilities in business processes. Logic bombs are malicious code triggered by conditions, race conditions exploit timing issues, and TOCTOU attacks exploit timing gaps, but business logic attacks specifically exploit flaws in application business logic and workflow design to bypass security controls through manipulation of legitimate application functionality. See Lesson 6, Topic A: Application Logic Manipulation Attacks.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 671,
    "question": "A security administrator discovers that attackers are using legitimate cloud services to host malicious content and command-and-control infrastructure. Which of the following terms best describes this technique?",
    "options": [
      "Cloud jacking",
      "Living off the land",
      "Cloudborne attack",
      "Infrastructure hijacking"
    ],
    "correct": [
      1
    ],
    "explanation": "Living off the land best describes attackers using legitimate cloud services to host malicious content and command-and-control infrastructure because this technique involves leveraging legitimate, trusted services and infrastructure to conduct malicious activities while avoiding detection by appearing as normal cloud usage. Living off the land minimizes suspicious activity and detection risk by using trusted platforms. Cloud jacking typically refers to account takeover, cloudborne attacks exploit cloud vulnerabilities, and infrastructure hijacking involves compromising existing infrastructure, but living off the land specifically refers to using legitimate services and platforms for malicious purposes to blend in with normal activities and avoid security detection. See Lesson 5, Topic A: Legitimate Service Abuse Techniques.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 674,
    "question": "Which of the following attack techniques involves exploiting race conditions in file system operations?",
    "options": [
      "Time-of-check time-of-use",
      "Symlink attack",
      "Directory traversal",
      "File inclusion"
    ],
    "correct": [
      0
    ],
    "explanation": "Time-of-check time-of-use (TOCTOU) involves exploiting race conditions in file system operations by manipulating the time gap between when a security check is performed and when the resource is actually used, allowing attackers to substitute files or change permissions between the check and use operations. TOCTOU specifically targets timing vulnerabilities in file operations. Symlink attacks use symbolic links to access unauthorized files, directory traversal accesses files outside intended directories, and file inclusion exploits application file processing, but TOCTOU specifically exploits the timing gap between security validation and resource usage in concurrent file system operations to bypass security controls. See Lesson 6, Topic A: File System Timing Attack Vectors.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  },
  {
    "id": 681,
    "question": "Which of the following attack techniques involves exploiting vulnerabilities in software update mechanisms?",
    "options": [
      "Supply chain attack",
      "Update poisoning",
      "Software tampering",
      "Distribution attack"
    ],
    "correct": [
      0
    ],
    "explanation": "Supply chain attack involves exploiting vulnerabilities in software update mechanisms by compromising the software development, distribution, or update infrastructure to deliver malicious code through legitimate software update channels, affecting all users who install the compromised updates. Supply chain attacks target the software distribution pipeline. Update poisoning, software tampering, and distribution attacks are related concepts but supply chain attack is the comprehensive term that encompasses attacks against the entire software supply and distribution chain including update mechanisms, development tools, and distribution infrastructure that deliver compromised software to end users through trusted channels. See Lesson 6, Topic B: Software Distribution Security Threats.",
    "type": "single",
    "topic": "threats-vulnerabilities-mitigations"
  }
]